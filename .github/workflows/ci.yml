name: CI (nodejs and golang)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.2'

      - name: Build JSON Tokenizer
        working-directory: ./packages/binaries
        run: GOOS=js GOARCH=wasm go build -o tokenizer.wasm -v ./wasm/tokenizer

      - name: Build JQ
        working-directory: ./packages/binaries
        run: GOOS=js GOARCH=wasm go build -o tokenizer.wasm -v ./wasm/jq

      - name: Test GO code
        working-directory: ./packages/binaries
        run: go test -v -timeout 1m -race -coverprofile=coverage.out -json ./... > test-report.out

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

      - name: Build
        run: yarn build:production

      - name: Test
        run: yarn test --color=true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
